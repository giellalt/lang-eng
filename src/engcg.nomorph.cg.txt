################################################################################
########## author: Eckhard Bick, ESSLLI, CG course, 2011-08-02 #################
### English PoS and morphology mapper, to be used in a system with only a small lexicon for irregular and closed class words, with no fullform lexicon and no morphological analyzer
### command line use: cat wiki_test |eng.pre | engmorf_nomorph --l | perl -wnpe 's/^([^ \n]+)/"<$1>"/;' | vislcg3 -g ~/parsers/eng/etc/engcg.nomorph.cg
### | vislcg3 -g ~/parsers/eng/etc/engcg.morf --trace |more
################################################################################


DELIMITERS = "<$.>" "<$!>" "<$?>" "<$\;>" "<$¶>" "<$start>" "<$START>" "<$afsnitslut>" "<${>" "<$}>" "<$|>" "<$...>" ; # with backslash? "<$«>" "<$»>" ? #  "<$\(>" og senere "<$\)>" fjernet (sidstnævnte dog bevaret i portcg) ....  "<$-->" ...,  removed "<$\;>" removed because of Wikipedia (Indonesian: Jawa)

SETS

LIST >>> = >>> ;
LIST <<< = <<< ;
LIST ALL-MORF = V PCP1 PCP2 INF N ADJ PROP INDP DET ART NUM PERS EC ADV KS KC KP INFM IN PRP ;
SET <lex> = ALL-MORF - (<heur>) ;

LIST NOMINAL = N PROP ADJ (PCP2 STA) ; # nominals, i.e. potentieal nominal heads

LIST ART = ART ;

LIST PRE-N = ART DET NUM ADJ STA ; # prenominals
LIST NON-PRE-N = (*) - PRE-N ;
LIST NON-PRE-N/ADV = (*) - PRE-N - (ADV) ;

LIST P = P S/P ; # plural
SET PRE-N-P = PRE-N + P ; # plural prenominals, equivalent to (ART DEF) (DET P) (DET S/P) (NUM P) ADJ (PCP2 STA) ;

LIST VFIN = PR PAST IMP ;
LIST INF = INF ;
LIST VV = PR PAST INP INF AKT PAS ;

LIST PRP = PRP ;

LIST CLB = "<,>" KS (ADV <rel>) (ADV <interr>) ; # clause boundaries

LIST V-SPEAK = <vq> <Vcog> <speak> "answer" "say" "tell" ; # speech verbs


BEFORE-SECTIONS

### prepositions ###

APPEND ("$1"v <safe> PRP) TARGET ("<(against|as|at|between|by|from|in|of|on|over|through|till|to|until)>"r) (NOT 0 <lex>) ; # 

### infinitive marker ###

APPEND ("to" <safe> INFM) TARGET ("<to>") ;

### adverbs ###

APPEND ("$1"v <safe> <atemp> ADV) TARGET ("<(always|ever|never|now|soon|today|tomorrow|yesterday)>"r) (NOT 0 <lex>) ; # 
APPEND ("$1"v <safe> ADV) TARGET ("<(.*ly)>"r) (NOT 0 <lex>) ; # -ly adverbs

### adjectives ###

APPEND ("$1"v <safe> ADJ) TARGET ("<(entire|old|whole|young)>"r) (NOT 0 <lex>) ; # 
APPEND ("$1"v <safe> ADJ) TARGET ("<(.*(ic|oid|ous))>"r) (NOT 0 <lex>) ; # 
APPEND ("$1"v <heur> ADJ) TARGET ("<(.*(al))>"r) (NOT 0 <lex>) ; # 

### nouns ###

APPEND ("$1"v <*> <safe> <Proper> N S GEN) TARGET ("<([A-Z].*)'s?>"r) (NOT 0 <lex>) (NOT -1 >>>) ; # mid-sentence proper nouns
APPEND ("$1"v <*> <safe> <Proper> N S GEN) TARGET ("<([A-Z].*)'s?>"r) (NOT 0 <lex>) (-1 >>>) ; # proper nouns
APPEND ("$1"v <*> <safe> <Proper> N S NOM) TARGET ("<([A-Z].*)>"r) (NOT 0 <lex>) (NOT -1 >>>) ; # mid-sentence proper nouns
APPEND ("$1"v <*> <heur> <Proper> N S NOM) TARGET ("<([A-Z].*)>"r) (NOT 0 <lex>) (-1 >>>) ; # proper nouns

APPEND ("$1y"v <heur> N P NOM) TARGET ("<(.*)ies>"r) (NOT 0 <lex>) ; # plural -s
APPEND ("$1"v <safe> N S GEN) TARGET ("<(.*)'s>"r) (NOT 0 <lex> OR (N)) ; # plural -s
APPEND ("$1"v <safe> N P GEN) TARGET ("<(.*s)'>"r) (NOT 0 <lex> OR (N)) ; # plural -s
APPEND ("$1"v <heur> N P NOM) TARGET ("<(.*)s>"r) (NOT 0 <lex> OR (N)) ; # plural -s

APPEND ("$1"v <safe> N S NOM) TARGET ("<(.*(ization))>"r) (NOT 0 <lex>) ; # -ation, -asion,
APPEND ("$1"v <heur> N S NOM) TARGET ("<(.*(ion))>"r) (NOT 0 <lex>) ; # -ation, -asion,

### verbs ###

APPEND ("$1y"v <heur> V 3S PR) TARGET ("<(.*)ies>"r) (NOT 0 <lex>) ; # plural -s
APPEND ("$1"v <heur> V 3S PR) TARGET ("<(.*)s>"r) (NOT 0 <lex> OR (V)) ; # plural -s
APPEND ("$1y"v <safe> V PCP2) TARGET ("<(.*)ied>"r) (NOT 0 <lex>) ; #
APPEND ("$1y"v <safe> V PAST) TARGET ("<(.*)ied>"r) (NOT 0 <lex>) ; #
APPEND ("$1"v <safe> V PCP2) TARGET ("<(.*?(.))\\2ed>"r) (NOT 0 <lex>) ; # shunned
APPEND ("$1"v <safe> V PAST) TARGET ("<(.*?(.))\\2ed>"r) (NOT 0 <lex>) ; # shunned
APPEND ("$1e"v <safe> V PCP2) TARGET ("<(.*)ed>"r) (NOT 0 <lex>) ; # tuned
APPEND ("$1e"v <safe> V PAST) TARGET ("<(.*)ed>"r) (NOT 0 <lex>) ; # tuned

APPEND ("$1"v <safe> V PCP1) TARGET ("<(.*?(.))\\2ing>"r) (NOT 0 <lex>) ; # shunned
APPEND ("$1"v <safe> V PCP1) TARGET ("<(.*y)ing>"r) (NOT 0 <lex>) ; # tuned
APPEND ("$1e"v <safe> V PCP1) TARGET ("<(.*)ing>"r) (NOT 0 <lex>) ; # tuned



### default

APPEND ("$1"v <heur> <default> N S NOM) TARGET ("<([a-z].*)>"r) (NOT 0 <lex> OR (N)) ; # dafault: noun
APPEND ("%l$1"v <*> <heur> N S NOM) TARGET ("<([A-Z].*)>"r) (NOT 0 <lex> OR (N)) (-1 >>>) ; # sentence-initial nouns
APPEND ("$1"v <heur> <default> V INF) TARGET ("<([a-z].*)>"r) (NOT 0 <lex> OR (V)) (-1 ("<to>") OR (<x>)) ; # dafault: noun
APPEND ("$1"v <heur> <default> V -3S) TARGET ("<([a-z].*)>"r) (NOT 0 <lex> OR (V)) (NEGATE *-1 (ART) OR (DET) OR (GEN) BARRIER NON-PRE-N) ; # dafault: noun

SECTION

REMOVE (PR) OR (PAST) (-1 (ART) OR (DET)) ;